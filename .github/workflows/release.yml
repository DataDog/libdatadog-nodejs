name: Release

on:
  push:
    branches:
      - v0.x

jobs:
  build-test-wasm:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        crate:
          - library_config
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
      - run: yarn install
      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - name: Build WASM
        run: |
          mkdir -p ./prebuilds/${{ matrix.crate }}
          wasm-pack build --target nodejs ./crates/${{ matrix.crate }} --out-dir ../../prebuilds/${{ matrix.crate }}
      - name: Test WASM
        run: node test_wasm.js
      - uses: actions/upload-artifact@v4
        with:
          name: prebuilds-wasm
          if-no-files-found: ignore
          path: ./prebuilds/*

  build:
    uses: Datadog/action-prebuildify/.github/workflows/build.yml@main
    needs: build-test-wasm
    with:
      package-manager: 'yarn'
      cache: false
      min-node-version: 16
      rust: true
      only: darwin-arm64,darwin-x64,linux-arm64,linux-x64

  publish:
    runs-on: ubuntu-latest
    needs: build
    environment: npm
    permissions:
      contents: write
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    outputs:
      pkgjson: ${{ steps.pkg.outputs.json }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
      - uses: actions/setup-node@v4
        with:
          registry-url: 'https://registry.npmjs.org'
      - run: chmod -R +x ./prebuilds
      - run: npm publish
      - id: pkg
        run: |
          content=`cat ./package.json | tr '\n' ' '`
          echo "json=$content" >> $GITHUB_OUTPUT
      - run: |
          git tag v${{ fromJson(steps.pkg.outputs.json).version }}
          git push origin v${{ fromJson(steps.pkg.outputs.json).version }}
